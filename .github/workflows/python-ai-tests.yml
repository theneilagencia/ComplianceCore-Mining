name: Python AI Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/ai/**'
      - 'app/modules/bridge/**'
      - 'app/services/integrations/**'
      - 'tests/**'
      - 'requirements-ai.txt'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/ai/**'
      - 'app/modules/bridge/**'
      - 'app/services/integrations/**'
      - 'tests/**'
      - 'requirements-ai.txt'

jobs:
  test-ai:
    name: Test AI Modules
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-ai.txt
          pip install pytest pytest-asyncio pytest-cov pytest-mock
      
      - name: Run AI tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          pytest tests/test_bridge_ai.py -v --tb=short --cov=src/ai --cov=app/modules/bridge --cov=app/services/integrations --cov-report=xml --cov-report=term
      
      - name: Run Validator tests
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          pytest tests/ai/test_validator.py -v --tb=short
        continue-on-error: true
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: ai-tests
          name: codecov-ai
          fail_ci_if_error: false
        continue-on-error: true
      
      - name: Generate test report
        if: always()
        run: |
          echo "## ðŸ§ª AI Tests Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Bridge AI tests completed" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Validator AI tests completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Python version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
      
      - name: Archive test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ai-test-results-py${{ matrix.python-version }}
          path: |
            coverage.xml
            .coverage
          retention-days: 30
