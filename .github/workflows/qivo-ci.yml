name: QIVO Mining CI/CD

on:
  push:
    branches:
      - main
      - release/**
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '22'

jobs:
  # Job 1: Lint and Type Check
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint || true

      - name: Run TypeScript type check
        run: npx tsc --noEmit

  # Job 2: Build
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: lint-and-typecheck
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build client
        run: npm run build --workspace=client

      - name: Build server
        run: npm run build --workspace=server

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            client/dist
            server/dist
          retention-days: 7

  # Job 3: Security Audit
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level=moderate || true

      - name: Check for outdated dependencies
        run: npm outdated || true

  # Job 4: Deploy to Render (main branch only)
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: [build, security-audit]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Trigger Render deployment
        run: |
          echo "ðŸš€ Deployment will be triggered automatically by Render"
          echo "Monitor deployment at: https://dashboard.render.com/"

      - name: Wait for deployment
        run: sleep 60

      - name: Run health checks
        run: |
          chmod +x scripts/health-check.sh
          scripts/health-check.sh qivo-mining || true

  # Job 5: Notify
  notify:
    name: Notify Team
    runs-on: ubuntu-latest
    needs: [deploy]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get commit info
        id: commit
        run: |
          echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_OUTPUT
          echo "author=$(git log -1 --pretty=%an)" >> $GITHUB_OUTPUT
          echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Notify (placeholder)
        run: |
          echo "ðŸ“¢ Notification:"
          echo "  Commit: ${{ steps.commit.outputs.sha }}"
          echo "  Author: ${{ steps.commit.outputs.author }}"
          echo "  Message: ${{ steps.commit.outputs.message }}"
          echo "  Status: ${{ needs.deploy.result }}"
          
          # In production, send to Slack/Discord/Email
          # Example:
          # curl -X POST ${{ secrets.SLACK_WEBHOOK_URL }} \
          #   -H 'Content-Type: application/json' \
          #   -d '{"text":"Deployment ${{ needs.deploy.result }}"}'

